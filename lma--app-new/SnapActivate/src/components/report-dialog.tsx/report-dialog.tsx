"use client";

import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogFooter,
} from "@/components/ui/dialog";
import { CampaignReportOutput } from "@/ai/flows/generate-report-flow";
import { Button } from "./ui/button";
import { FileDown } from "lucide-react";

interface ReportDialogProps {
  report: CampaignReportOutput | null;
  campaignName: string | null;
  open: boolean;
  onOpenChange: (open: boolean) => void;
}

export function ReportDialog({ report, campaignName, open, onOpenChange }: ReportDialogProps) {
  if (!report) return null;

  const handleDownload = () => {
    if (!report || !campaignName) return;

    const markdownContent = `
# Campaign Report: ${campaignName}

## Executive Summary
${report.executiveSummary}

---

## Sales Performance
- **Total Revenue:** ${report.salesPerformance.totalRevenue}
- **Units Sold:** ${report.salesPerformance.unitsSold}
- **Best Selling Variant:** ${report.salesPerformance.bestSellingVariant}

---

## Customer Insights
- **Sentiment:** ${report.customerInsights.sentiment}
- **Demographics:** ${report.customerInsights.demographics}

---

## Promoter Feedback
${report.promoterFeedback}

---

## Competitor Activity
${report.competitorActivity}

---

## Recommendations
${report.recommendations.map(rec => `- ${rec}`).join('\n')}
    `;

    const blob = new Blob([markdownContent.trim()], { type: "text/markdown;charset=utf-8" });
    const url = URL.createObjectURL(blob);
    const link = document.createElement("a");
    link.href = url;
    link.download = `Campaign Report - ${campaignName.replace(/ /g, '_')}.md`;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
  };


  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="sm:max-w-2xl max-h-[90vh] overflow-y-auto">
        <DialogHeader>
          <DialogTitle>AI-Generated Report: {campaignName}</DialogTitle>
          <DialogDescription>
            This report was generated by analyzing campaign data.
          </DialogDescription>
        </DialogHeader>
        <div className="space-y-6 py-4">
          <div>
            <h3 className="font-semibold text-lg mb-2">Executive Summary</h3>
            <p className="text-sm text-muted-foreground">{report.executiveSummary}</p>
          </div>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div className="p-4 bg-muted/50 rounded-lg">
                  <h4 className="font-semibold text-sm">Total Revenue</h4>
                  <p className="text-2xl font-bold text-primary">{report.salesPerformance.totalRevenue}</p>
              </div>
              <div className="p-4 bg-muted/50 rounded-lg">
                  <h4 className="font-semibold text-sm">Units Sold</h4>
                  <p className="text-2xl font-bold">{report.salesPerformance.unitsSold}</p>
              </div>
               <div className="p-4 bg-muted/50 rounded-lg">
                  <h4 className="font-semibold text-sm">Best Selling Variant</h4>
                  <p className="text-2xl font-bold">{report.salesPerformance.bestSellingVariant}</p>
              </div>
          </div>
           <div>
            <h3 className="font-semibold text-lg mb-2">Customer Insights</h3>
            <div className="space-y-2 text-sm">
                <p><span className="font-semibold">Sentiment:</span> {report.customerInsights.sentiment}</p>
                <p><span className="font-semibold">Demographics:</span> {report.customerInsights.demographics}</p>
            </div>
          </div>
          <div>
            <h3 className="font-semibold text-lg mb-2">Promoter Feedback</h3>
            <p className="text-sm text-muted-foreground">{report.promoterFeedback}</p>
          </div>
          <div>
            <h3 className="font-semibold text-lg mb-2">Competitor Activity</h3>
            <p className="text-sm text-muted-foreground">{report.competitorActivity}</p>
          </div>
           <div>
            <h3 className="font-semibold text-lg mb-2">Recommendations</h3>
            <ul className="list-disc list-inside space-y-1 text-sm text-muted-foreground">
                {report.recommendations.map((rec, index) => <li key={index}>{rec}</li>)}
            </ul>
          </div>
        </div>
        <DialogFooter>
          <Button variant="secondary" onClick={handleDownload}>
            <FileDown className="mr-2 h-4 w-4" />
            Download Report
          </Button>
        </DialogFooter>
      </DialogContent>
    </Dialog>
  );
}